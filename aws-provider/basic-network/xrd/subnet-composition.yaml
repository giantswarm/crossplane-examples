---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  creationTimestamp: "2024-04-13T08:27:25Z"
  labels:
    app.kubernetes.io/managed-by: crossplane
    app.kubernetes.io/name: basic-network
    component: network
    provider: aws
  name: subnetset
spec:
  compositeTypeRef:
    apiVersion: xnetworks.crossplane.giantswarm.io/v1alpha1
    kind: SubnetSet
  mode: Pipeline
  pipeline:
  - step: create-subnets-from-template
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          {{ $appName  := "" }}
          {{ $appIndex := .observed.composite.resource.spec.appIndex }}
          {{ $claimRef := .observed.composite.resource.spec.claimRef }}
          {{ $type     := .observed.composite.resource.spec.type }}
          {{ if not ( empty $claimRef ) }}
          {{ $appName = index $claimRef "name" }}
          {{ if not (empty $appIndex) }}
          {{ $appName = printf "%s-%s" $appName $appIndex }}
          {{ end }}
          {{ end }}

          {{ $labels := .observed.composite.resource.metadata.labels }}
          {{ $region  := .observed.composite.resource.spec.region }}
          {{ $subnets := .observed.composite.resource.spec.subnets }}
          {{ $vpcId   := .observed.composite.resource.spec.vpcId }}
          {{ $tags := .observed.composite.resource.spec.tags }}

          {{ $public  := false }}
          {{ if eq $type "public" }}
          {{ $public = true }}
          {{ end }}

          {{ $index := 0 }}
          {{ range $key, $value := $subnets }}
          {{ $az := printf "%s%s" $region $value.zone }}
          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: RouteTable
          metadata:
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: route-table-{{ $index }}
            labels:
              access: {{ $type }}
              availabilityZone: {{ $az }}
          spec:
            forProvider:
              region: {{ $region }}
              vpcId: {{ $vpcId }}
              tags:
                Name: {{ $appName }}-{{ $type }}-{{ $az }}

          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: Subnet
          metadata:
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: subnet-{{ $index }}
            labels:
              access: {{ $type }}
              availabilityZone: {{ $az }}
          spec:
            forProvider:
              availabilityZone: {{ $az }}
              cidrBlock: {{ $value.cidrBlock }}
              mapPublicIpOnLaunch: {{ $public }}
              region: {{ $region }}
              vpcId: {{ $vpcId }}
              tags:
                Name: {{ $appName }}-{{ $type }}-{{ $az }}
                {{ range $k, $v := $tags.subnet }}
                {{ $k }}: {{ $v | quote }}
                {{ end }}
          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: RouteTableAssociation
          metadata:
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: route-table-assoc-{{ $index }}
            labels:
              availabilityZone: {{ $az }}
          spec:
            forProvider:
              region: {{ $region }}
              routeTableIdSelector:
                matchControllerRef: true
                matchLabels:
                  availabilityZone: {{ $az }}
              subnetIdSelector:
                matchControllerRef: true
                matchLabels:
                  availabilityZone: {{ $az }}

          {{ $index = add $index 1 }}
          {{ end }}

  - step: patch-and-transform
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta2
      environment: null
      kind: Resources

      patchSets:
      - name: metadata
        patches:
        - fromFieldPath: metadata.labels
          toFieldPath: metadata.labels
          policy:
            toFieldPath: MergeObject
          type: FromCompositeFieldPath
        - fromFieldPath: spec.providerConfigRef
          toFieldPath: spec.providerConfigRef
          type: FromCompositeFieldPath
        - fromFieldPath: spec.deletionPolicy
          toFieldPath: spec.deletionPolicy
          type: FromCompositeFieldPath
      - name: commontags
        patches:
        - fromFieldPath: spec.tags.all
          toFieldPath: spec.forProvider.tags
          type: FromCompositeFieldPath
          policy:
            toFieldPath: MergeObject
        - fromFieldPath: metadata.labels
          toFieldPath: spec.forProvider.tags
          type: FromCompositeFieldPath
          policy:
            toFieldPath: MergeObject
        - fromFieldPath: spec.region
          toFieldPath: spec.forProvider.tags.region
          type: FromCompositeFieldPath

      resources:
      - name: subnet-0
        patches:
        - patchSetName: metadata
          type: PatchSet
        - patchSetName: commontags
          type: PatchSet

        - fromFieldPath: status.atProvider.id
          toFieldPath: status.subnets.a
          type: ToCompositeFieldPath

        - fromFieldPath: status.atProvider.tags.Name
          toFieldPath: status.subnets.aName
          type: ToCompositeFieldPath

      - name: subnet-1
        patches:
        - patchSetName: metadata
          type: PatchSet
        - patchSetName: commontags
          type: PatchSet
        - fromFieldPath: status.atProvider.id
          toFieldPath: status.subnets.b
          type: ToCompositeFieldPath

        - fromFieldPath: status.atProvider.tags.Name
          toFieldPath: status.subnets.bName
          type: ToCompositeFieldPath

      - name: subnet-2
        patches:
        - patchSetName: metadata
          type: PatchSet
        - patchSetName: commontags
          type: PatchSet
        - fromFieldPath: status.atProvider.id
          toFieldPath: status.subnets.c
          type: ToCompositeFieldPath

        - fromFieldPath: status.atProvider.tags.Name
          toFieldPath: status.subnets.cName
          type: ToCompositeFieldPath

      # ------------------------------------------------------------------------------
      # Route Tables
      # ------------------------------------------------------------------------------
      - name: route-table-0
        patches:
        - patchSetName: metadata
          type: PatchSet
        - patchSetName: commontags
          type: PatchSet

        - fromFieldPath: status.atProvider.id
          toFieldPath: status.routeTables.a
          type: ToCompositeFieldPath

        - fromFieldPath: status.atProvider.tags.Name
          toFieldPath: status.routeTables.aName
          type: ToCompositeFieldPath

      - name: route-table-1
        patches:
        - patchSetName: metadata
          type: PatchSet
        - patchSetName: commontags
          type: PatchSet

        - fromFieldPath: status.atProvider.id
          toFieldPath: status.routeTables.b
          type: ToCompositeFieldPath

        - fromFieldPath: status.atProvider.tags.Name
          toFieldPath: status.routeTables.bName
          type: ToCompositeFieldPath

      - name: route-table-2
        patches:
        - patchSetName: metadata
          type: PatchSet
        - patchSetName: commontags
          type: PatchSet

        - fromFieldPath: status.atProvider.id
          toFieldPath: status.routeTables.c
          type: ToCompositeFieldPath

        - fromFieldPath: status.atProvider.tags.Name
          toFieldPath: status.routeTables.cName
          type: ToCompositeFieldPath

      # ------------------------------------------------------------------------------
      # Route Table Associations
      # ------------------------------------------------------------------------------
      - name: route-table-assoc-0
        patches:
        - patchSetName: metadata
          type: PatchSet

      - name: route-table-assoc-1
        patches:
        - patchSetName: metadata
          type: PatchSet

      - name: route-table-assoc-2
        patches:
        - patchSetName: metadata
          type: PatchSet
