---
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: subnetsets.xnetworks.crossplane.giantswarm.io
spec:
  claimNames:
    kind: SubnetSetClaim
    plural: subnetsetclaims
  defaultCompositionRef:
    name: subnetset
  enforcedCompositionRef:
    name: subnetset
  group: xnetworks.crossplane.giantswarm.io
  names:
    kind: SubnetSet
    listKind: SubnetSetList
    plural: subnetsets
    shortNames:
    - sn
    singular: subnetset
  versions:
  - name: v1alpha1
    referenceable: true
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              appIndex:
                description: |-
                  AppIndex is the index of the application that the subnet is being created for.


                  This is used for complex applications that require multiple subnet groupsr
                  Normally leave this on the default.
                type: string
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              region:
                description: Region is the region you'd like the VPC to be created
                  in.
                pattern: ^[a-z]{2}-[a-z]+-[0-9]$
                type: string
              subnets:
                description: Subnets is a map of availability zones and subnet cidr
                  blocks.
                properties:
                  a:
                    description: SubnetA is the subnet in availability zone A.
                    properties:
                      cidrBlock:
                        description: CidrBlock is a the CIDR block to use for this
                          subnets.
                        pattern: ^([0-9]{1,3}.){3}[0-9]{1,3}/[0-9]{1,2}$
                        type: string
                      zone:
                        description: Zone is the availability zone to create the subnet
                          in.
                        type: string
                    required:
                    - cidrBlock
                    - zone
                    type: object
                  b:
                    description: SubnetB is the subnet in availability zone B.
                    properties:
                      cidrBlock:
                        description: CidrBlock is a the CIDR block to use for this
                          subnets.
                        pattern: ^([0-9]{1,3}.){3}[0-9]{1,3}/[0-9]{1,2}$
                        type: string
                      zone:
                        description: Zone is the availability zone to create the subnet
                          in.
                        type: string
                    required:
                    - cidrBlock
                    - zone
                    type: object
                  c:
                    description: SubnetC is the subnet in availability zone C.
                    properties:
                      cidrBlock:
                        description: CidrBlock is a the CIDR block to use for this
                          subnets.
                        pattern: ^([0-9]{1,3}.){3}[0-9]{1,3}/[0-9]{1,2}$
                        type: string
                      zone:
                        description: Zone is the availability zone to create the subnet
                          in.
                        type: string
                    required:
                    - cidrBlock
                    - zone
                    type: object
                required:
                - a
                - b
                - c
                type: object
              tags:
                description: Tags is a set of tags to apply to resources in the subnetset
                properties:
                  all:
                    additionalProperties:
                      type: string
                    description: All is a map of tags to apply to all resources in
                      the subnetset.
                    maxProperties: 50
                    type: object
                    x-kubernetes-map-type: atomic
                  subnet:
                    additionalProperties:
                      type: string
                    description: Subnet is a map of tags to apply only to the subnet
                      resources
                    maxProperties: 50
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
                x-kubernetes-map-type: atomic
              type:
                default: public
                description: Type is the type of VPC Subnet to create.
                enum:
                - public
                - private
                type: string
              vpcId:
                description: VpcId is the unique identifier for the VPC.
                type: string
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - region
            - subnets
            - vpcId
            type: object
          status:
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              routeTables:
                description: RouteTables is a map of route tables discovered by the
                  composite.
                properties:
                  a:
                    description: RouteTableA is the route table ID for availability
                      zone A.
                    type: string
                  aName:
                    description: RouteTableAName is the name of the route table in
                      availability zone A.
                    type: string
                  b:
                    description: RouteTableB is the route table ID for availability
                      zone B.
                    type: string
                  bName:
                    description: RouteTableBName is the name of the route table in
                      availability zone B.
                    type: string
                  c:
                    description: RouteTableC is the route table ID for availability
                      zone C.
                    type: string
                  cName:
                    description: RouteTableCName is the name of the route table in
                      availability zone C.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              subnets:
                description: Subnets is a map of subnets discovered by the composite.
                properties:
                  a:
                    description: SubnetA is the subnet ID in availability zone A.
                    type: string
                  aName:
                    description: SubnetAName is the name of the subnet in availability
                      zone A.
                    type: string
                  b:
                    description: SubnetB is subnet ID in availability zone B.
                    type: string
                  bName:
                    description: SubnetBName is the name of the subnet in availability
                      zone B.
                    type: string
                  c:
                    description: SubnetC is the subnet ID in availability zone C.
                    type: string
                  cName:
                    description: SubnetCName is the name of the subnet in availability
                      zone C.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              vpcId:
                description: VpcID is the unique identifier for the VPC.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
